//version = new ProjectVersion(0,1)
ext.versionFile=file 'version.properties'
	
	task first{
		doFirst{
			println 'first'
		}
	}
	
	task second(dependsOn:['first']){
		doFirst{
			println 'second'
		}
	}
	
	task third{
		doFirst{
		println 'third'
		}
	}
	
	task printVersion(dependsOn: ['second','first']){
		doLast{
			println "version ${version}"
		}
	}
	
	class ProjectVersion{
		Integer major
		Integer minor
		Boolean release
		
		ProjectVersion(Integer major, Integer minor){
			this(major,minor,Boolean.FALSE)
		}
		
		ProjectVersion(Integer major,Integer minor, Boolean release){
			this.major=major
			this.minor=minor
			this.release=release
		}
		
		@Override
		String toString(){
			return "${major}.${minor}.${release ? 'RELEASE':'SNAPSHOT'}"
		}
	}
	
	task loadVersion(){
		doFirst{
			project.version = readVersion()
		}
	}
	
	ProjectVersion readVersion(){
			logger.quiet 'Reading the version file.'
			if (!versionFile.exists()){
				throw new GradleException("Required version file does not exist: $versionFile.canoniclaPath")
			}
			Properties versionProps = new Properties()
			
			versionFile.withInputStream { stream ->
				versionProps.load(stream)
			}
			
			new ProjectVersion(
			versionProps.major.toInteger(),
			versionProps.minor.toInteger(),
			versionProps.release.toBoolean())
	}